<?php
/**
 * @file uc_field_attribute.module
 * Ubercart attributes and options based on Backdrop core fields
 */

/**
 * Implements hook_menu().
 */
function uc_field_attribute_menu() {
  // Menu items for default product class attributes and options.
  $items['admin/store/products/classes/%uc_product_class/field-attribute'] = array(
    'title' => 'Field Attributes',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('uc_field_attribute_form', 4, 'class'),
    'access callback' => 'uc_attribute_product_class_access',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'file' => 'uc_field_attribute.admin.inc',
  );
  return $items;
}
/**
 * Implements hook_config_info().
 */
function uc_field_attribute_config_info() {
  $prefixes['uc_field_attribute.settings'] = array(
    'label' => t('UC Field attributes settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_node_insert().
 */
function uc_field_attribute_node_insert($node) {
  if (!array_key_exists($node->type, uc_product_class_load())) {
    return;
  }
  module_load_include('inc', 'uc_field_attribute', 'uc_field_attribute');
  return _uc_field_attribute_sync($node, 'insert');
}

/**
 * Implements hook_node_update().
 */
function uc_field_attribute_node_update($node) {
  if (!array_key_exists($node->type, uc_product_class_load())) {
    return;
  }
  module_load_include('inc', 'uc_field_attribute', 'uc_field_attribute');
  return _uc_field_attribute_sync($node, 'update');
}

/**
 * Implements hook_node_delete().
 */
function uc_field_attribute_node_delete($node) {
  if (!array_key_exists($node->type, uc_product_class_load())) {
    return;
  }
  module_load_include('inc', 'uc_field_attribute', 'uc_field_attribute');
  return _uc_field_attribute_node_delete($node);
}

/**
 * Save settings.
 */
function uc_field_attribute_save_settings($bundle_name, $settings) {
  config_set('uc_field_attribute.settings', "uc_field_attribute_$bundle_name", (array) $settings);
  _uc_field_attribute_setting_delete($bundle_name, $settings);
}

/**
 * Delete attributes from node when a field attribute is deleted from bundle.
 *
 * @param string $bundle_name
 * @param array $settings
 */
function _uc_field_attribute_setting_delete($bundle_name, $settings) {
  module_load_include('inc', 'uc_field_attribute', 'uc_field_attribute');
  foreach ($settings['fields'] as $field => $enabled) {
    if ($enabled) {
      continue;
    }

    $result = db_select('uc_field_attribute_node', 'n')
      ->fields('n', array('aid', 'nid'))
      ->condition('n.field_instance_id', $field)
      ->execute();
    foreach ($result as $item) {
      $node = node_load($item->nid);
      if ($node->type == $bundle_name) {
        db_delete('uc_attribute_options')
          ->condition('aid', $item->aid)
          ->execute();
        db_delete('uc_field_attribute_options')
          ->condition('aid', $item->aid)
          ->execute();
        db_delete('uc_attributes')
          ->condition('aid', $item->aid)
          ->execute();
        db_delete('uc_field_attribute_node')
          ->condition('aid', $item->aid)
          ->execute();
        db_delete('uc_product_attributes')
          ->condition('aid', $item->aid)
          ->condition('nid', $item->nid)
          ->execute();
      }
    }
  }
}
